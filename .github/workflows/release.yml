name: Release software for all major operating systems
on:
  # pull_request:
  # workflow_dispatch:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build:
    # concurrency: 
    #   group: ${{ github.head_ref }}
    #   cancel-in-progress: true
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.11'
    - run: pip install -r requirements.txt pyinstaller
    - run: pyinstaller main.py --onefile --name piano_to_midi_${{matrix.os}}
    - uses: actions/upload-artifact@v2
      with:
        path: dist/*
        name: ${{ matrix.os }}
  deploy:
    # concurrency: 
    #   group: ${{ github.head_ref }}
    #   cancel-in-progress: true
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.event.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        path: dist
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.ref }}
    #     release_name: Release ${{ github.ref }}
    #     draft: false
    #     prerelease: false
    # - run: for file in $(find ./dist -type f); do cp $file "${$(echo $file | tr / _):2}" ; done
    - run: |
        set -x
        assets=()
        for asset in $(find dist -type f); do
          assets+=("-a" "$asset")
        done
        tag_name="${GITHUB_REF##*/}"
        hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}